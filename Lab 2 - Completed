import java.util.Random;
import java.util.Arrays;

public class Lab2 {
    private int maxSize; // size of stack array
    private int[] stackArray; // our array
    private int top; // top of stack

    public Lab2(int size) {
        maxSize = size;
        stackArray = new int[maxSize];
        top = -1;
    }

    public void insert(int value) {
        if (top == maxSize - 1) {
            System.out.println("Stack is full, cannot insert more elements");
            return;
        }
        top++;
        stackArray[top] = value;
    }

    public int fetch(int key) {
        for (int i = top; i >= 0; i--) {
            if (stackArray[i] == key) {
                return i;
            }
        }
        return -1; // key not found
    }

    public static void main(String[] args) {
        int size1 = 10;
        Lab2 stack1 = new Lab2(size1); // create a new stack with a maximum
        int size2 = 100;
        Lab2 stack2 = new Lab2(size2); // create a new stack with a maximum
        int size3 = 1000;
        Lab2 stack3 = new Lab2(size3); // create a new stack with a maximumsize of 1000
        Random rand = new Random(); // random value

        for (int i = 0; i < size1; i++) {
            int randomIndex = rand.nextInt(size1);
            int randomValue = rand.nextInt(100) + 1;
            stack1.insert(randomValue); // add the random value to the top of the stack
        }
        for (int i = 0; i < size2; i++) {
            int randomIndex = rand.nextInt(size2);
            int randomValue = rand.nextInt(1000) + 1;
            stack2.insert(randomValue); // add the random value to the top of the stack
        }
        for (int i = 0; i < size3; i++) {
            int randomIndex = rand.nextInt(size3);
            int randomValue = rand.nextInt(1500) + 1;
            stack3.insert(randomValue); // add the random value to the top of the stack
        }

        int randIndex1 = rand.nextInt(size1);
        int randElement1 = stack1.stackArray[randIndex1];

        System.out.println(Arrays.toString(stack1.stackArray));
        System.out.println("Random element aka Key is: " + randElement1);

        int index1 = stack1.fetch(randElement1);
        if (index1 == -1) {
            System.out.println("Key not found");
        } else {
            System.out.println("Key found at index: " + index1);
        }

        int randIndex2 = rand.nextInt(size2);
        int randElement2 = stack2.stackArray[randIndex2];

        System.out.println(Arrays.toString(stack2.stackArray));
        System.out.println("Random element aka Key is: " + randElement2);

        int index2 = stack2.fetch(randElement2);
        if (index2 == -1) {
            System.out.println("Key not found");
        } else {
            System.out.println("Key found at index: " + index2);
        }
        
        int randIndex3 = rand.nextInt(size3);
        int randElement3 = stack3.stackArray[randIndex3];

        System.out.println(Arrays.toString(stack2.stackArray));
        System.out.println("Random element aka Key is: " + randElement3);

        int index3 = stack3.fetch(randElement3);
        if (index3 == -1) {
            System.out.println("Key not found");
        } else {
            System.out.println("Key found at index: " + index3);
        }
    }
}
